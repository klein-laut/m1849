<!-- /templates/product.liquid -->

<div itemscope itemtype="http://schema.org/Product">

  <meta itemprop="url" content="{{ shop.url }}{{ product.url }}">
  <meta itemprop="image" content="{{ product.featured_image.src | img_url: 'grande' }}">

  {% assign current_variant = product.selected_or_first_available_variant %}

  <div class="grid product-single">
    <div class="grid__item large--eight-twelfths medium--one-whole text-center">
      {% include 'product-images' %}
    </div>
    <div class="grid__item product-single__meta--wrapper medium--one-whole large--four-twelfths">
      <div class="product-single__meta">
        {% if settings.product_vendor_enable %}
          <h2 class="product-single__vendor" itemprop="brand">{{ product.vendor }}</h2>
        {% endif %}

        <h1 class="product-single__title" itemprop="name">{{ product.title }}</h1>
        <div itemprop="offers" itemscope itemtype="http://schema.org/Offer">
          {% comment %}
            Optionally show the 'compare at' or original price of the product.
          {% endcomment %}

          {% comment %}
            {% if product.compare_at_price > product.price %}
              <span class="product-single__price--wrapper">
                <span class="visually-hidden">{{ 'products.general.regular_price' | t }}</span>
                <span id="ComparePrice" class="product-single__price--compare-at">
                  {{ product.compare_at_price | money }}
                </span>
                <span class="visually-hidden">{{ 'products.general.sale_price' | t }}</span>
              </span>
            {% endif %}
          {% endcomment %}
        </div>

        <div class="product-single__description rte" itemprop="description">
          <h2>{{ product.collections.first.title }}</h2>
          {{ product.description }}
        </div>
        <div class="specs tabular">
          {% assign made_in_places = "italy,asia" | split: "," %}
          <div class="tabs">
            {% for place in made_in_places %}
              {% assign place_fields = product.metafields[place] | size %}
              {% if place_fields > 0 %}
                <a href="#{{place}}" class="{% if forloop.first %}active{% endif %}" data-tab="{{ place }}">{{ place | capitalize }}</a>
              {% endif %}
            {% endfor %}
          </div>
          <div class="tab-content">
            {% for place in made_in_places %}
              {% assign place_fields = product.metafields[place] | size %}
              {% if place_fields > 0 %}
                <div class="tab {% if forloop.first %}active{% endif %}" data-tab="{{ place }}">
                  <table>
                    <tbody>
                      {% for field in product.metafields[place] %}
                        <tr>
                          {% assign key = field[0] | split: "_" %}
                          <td>{% for word in key %}{{word | capitalize}} {% endfor %}</td>
                          <td>{{ field[1] }}</td>
                        </tr>
                      {% endfor %}
                    </tbody>
                  </table>
                </div>
              {% endif %}
            {% endfor %}
          </div>
        </div>

        {% include 'product-form' %}
        {% if settings.social_sharing_products %}
          {% include 'social-sharing' %}
        {% endif %}
      </div>
    </div>
  </div>
  <div class="product-extras related-lookbooks">
    <h3>Featured In</h3>
    <div class="lookbooks-container" data-relatable="product.articles" data-relatable-id="{{product.id}}">
      {% raw %}
        {{#articles}}
          <a href="/blogs/lookbook/{{id}}" class="product-lookbook">
            <img src="{{#img_url.medium}}{{{image.src}}}{{/img_url.medium}}" alt="">
            <h3>{{title}}</h3>
            <p>{{{summary_html}}}</p>
          </a>
        {{/articles}}
      {% endraw %}
    </div>
  </div>
  <div class="product-extras related-products">
    <h3>
      Products in Category
      <a href="{{ product.collections.first.url }}" class="more-styles">{{ product.collections.first.products.size }} more styles</a>
    </h3>
    <div class="slick-items">
      {% for _product in product.collections.first.products %}
        <div class="related-product product-card">
          <a href="{{ _product.url }}">
            <img src="{% if product.images.size > 0 %}{{ _product.featured_image | img_url: "compact" }}{% else %}{{ 'no-image-compact.png' | asset_url }}{% endif %}" alt="{{ product.title | escape }}" />
          </a>
        </div>
      {% endfor %}
    </div>
  </div>
  {% if collection %}
    <hr class="hr--clear">
    <div class="text-center">
      <a href="{{ collection.url }}" class="return-link">&larr; {{ 'products.general.collection_return' | t: collection: collection.title }}</a>
    </div>
  {% endif %}

</div>

{% comment %}

  *IMPORTANT:*
  This theme uses a customized version of `option_selection.js` to support using radio inputs for
  color and size variants. The custom version is in `variant_selection.js`.

  If you wish to enable the default dropdowns for size and color
  you can change the liquid asset tag below from:

  {{ 'variant_selection.js' | asset_url | script_tag }}

  to

  {{ 'option_selection.js' | shopify_asset_url | script_tag }}

  If you use the default `option_selection.js` the labels for the dropdowns will
  appear outside the dropdown.

  You will also need to change `.radio-wrapper` to `.selector-wrapper` below.

  {{ 'variant_selection.js' | asset_url | script_tag }}
{% endcomment %}

<script>
  // var selectCallback = function(variant, selector) {
  //   timber.productPage({
  //     money_format: "{{ shop.money_format }}",
  //     variant: variant,
  //     selector: selector,
  //     translations: {
  //       addToCart : {{ 'products.product.add_to_cart' | t | json }},
  //       soldOut : {{ 'products.product.sold_out' | t | json }},
  //       unavailable : {{ 'products.product.unavailable' | t | json }}
  //     }
  //   });
  // };
  //
  // jQuery(function($) {
  //   new Shopify.OptionSelectors('ProductSelect', {
  //     product: {{ product | json }},
  //     onVariantSelected: selectCallback,
  //     enableHistoryState: true
  //   });
  //
  //   // Add label if only one product option and it isn't 'Title'. Could be 'Size'.
  //   {% if product.options.size == 1 and product.options.first != 'Title' %}
  //     $('.radio-wrapper:eq(0)').prepend('<label for="ProductSelect-option-0" class="single-option-radio__label">{{ product.options.first | escape }}</label>');
  //   {% endif %}
  //
  //   // Hide drop-down selectors if we only have 1 variant and its title contains 'Default'.
  //   {% if product.variants.size == 1 and product.variants.first.title contains 'Default' %}
  //     $('.selector-wrapper').hide();
  //   {% endif %}
  // });
</script>
