{% assign image_count = product.images.size %}
<div class="product-images">
  <div class="front-view-image">
    <section class="front-view-container">
      <figure class="product-card">
        {{ product.featured_image | img_url: "large" | img_tag }}
      </figure>
    </section>
    <footer>
      <span class="image-view-title">Frontal view</span>
    </footer>
  </div>
  <div class="stacked-images">
    <section class="stacked-container">
      {% for image in product.images reversed %}
        <figure class="product-card" data-image-count="{{ image_count }}">
          <img  src="{{ image.src | img_url: 'large' }}" alt="{{ image.alt | escape }}" data-image-id="{{ image.id }}">
        </figure>
      {% endfor %}
    </section>
    <footer>
      <span class="image-view-title">Frontal layer view</span>
    </footer>
  </div>
  <div class="side-view-images" data-image-count="{{ image_count }}">
    <section class="side-view-container">
      {% for image in product.images %}
        <figure>
          <img src="{{ image.src | img_url: 'large' }}">
        </figure>
      {% endfor %}
    </section>
    <footer>
      <span class="image-view-title">Side view</span>
    </footer>
  </div>
  <div class="back-view-image" data-image-count="{{ image_count }}">
    <section class="back-view-container">
      <figure class="product-card">
        {{ product.images.last | img_url: "large" | img_tag }}
      </figure>
    </section>
    <footer>
      <span class="image-view-title">Back view</span>
    </footer>
  </div>
  <div class="toggle-views">
    <span class="image-view-title switch-image-view active" data-direction="back">See back</span>
    <span class="image-view-title switch-image-view" data-direction="front">See front</span>
  </div>
</div>
<script type="text/javascript">
  (function($) {
    var zoomed = false;
    
    // Fix for setting specific height on container
    function set_stack_height() {
      var stack_height = $('.stacked-images').outerHeight();
      $('.product-images').css('height', stack_height + "px");
      
      if (zoomed) {
        document.body.style.zoom = zoom = 1.0000000;
        zoomed = false;
      } else {
        document.body.style.zoom = zoom = 1.0000001;
        zoomed = true;
      }
      
      console.log(zoomed);
      
    }
        
    $(window).load(set_stack_height);
    $(window).resize(set_stack_height);
    
    $(function() {
      // Toggle front and back switches
      var $product_images = $('.product-images');

      $('.switch-image-view').click(function() {
        var direction = $(this).attr('data-direction');

        $product_images.attr('data-direction', direction);
        $('.switch-image-view').addClass('active');
        $(this).removeClass('active');
      });
    });
  })(jQuery);
</script>
